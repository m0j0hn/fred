# Reference: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  # TODO Update branch name(s)
  # Triggers the workflow on push or pull request events but only for branch 'next'
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

  # Allow running from Actions tab
  workflow_dispatch:

permissions:
  # Reference: https://github.blog/changelog/2021-04-20-github-actions-control-permissions-for-github_token/
  contents: read

jobs:
  platform_matrix:
    strategy:
      matrix:
        # TODO Fix freenet.client.filter.M3UFilterTest on Windows, enable Windows builds
        #os: [macos-latest, ubuntu-latest, windows-latest]
        os: [macos-latest, ubuntu-latest]
        distribution: [temurin]
        # TODO What JDK versions are needed?
        # TODO Fix freenet.support.compress.GzipCompressorTest on Java 16, enable 16 builds
        #java: [8, 11, 16]
        java: [8, 11]

    runs-on: ${{ matrix.os }}

    env:
      # Global scope vars
      DEV_OS: 'ubuntu-latest'
      DEV_JAVA: '11'
      # Note: We *should* RELEASE from platform as DEV, but they do not have to match
      RELEASE_OS: 'ubuntu-latest'
      RELEASE_JAVA: '11'

    steps:
    - uses: actions/checkout@v3

    - uses: gradle/wrapper-validation-action@v1

    - uses: actions/setup-java@v3
      with:
        cache: 'gradle'
        distribution: '${{ matrix.distribution }}'
        java-version: '${{ matrix.java }}'

    - name: env
      run: |
        echo "TODO Inject AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY from Github secret store, then remove this step"

    - name: before_cache
      run: |
        echo "TODO TBD Still needed? See .travis.yml, https://github.com/actions/cache"

    - name: cache
      run: |
        echo "TODO TBD Still needed? See .travis.yml, https://github.com/actions/cache"

    - name: before_install
      run: |
        echo "" > gradle.properties  # Force empty gradle.properties file
        echo "org.gradle.configureondemand=true" >> gradle.properties
        echo "org.gradle.jvmargs=-Xms256m -Xmx1024m" >> gradle.properties
        echo "org.gradle.parallel = true" >> gradle.properties
        echo "tasks.withType(Test) { maxParallelForks = Runtime.runtime.availableProcessors() }" >> gradle.properties
        cat gradle.properties

    - name: gradle --warning-mode all
      # Note: Used to help porting to newer Gradle versions
      if: ${{ ( matrix.os == env.RELEASE_OS ) && ( matrix.java == env.RELEASE_JAVA ) }}
      run: |
        echo "Run Gradle in pedantic mode to flush out Gradle upgrade issues"
        ./gradlew --warning-mode all

    - name: gradle javadoc
      # TODO Fix all open issues, then remove 'javadoc failOnError false' setting from build.gradle
      run: |
        ./gradlew javadoc

    - name: Install awscli
      # TODO Can we use a Github Action to do the AWS work instead?
      # Note: Only used for RELEASE
      if: ${{ ( matrix.os == env.RELEASE_OS ) && ( matrix.java == env.RELEASE_JAVA ) }}
      run: |
        pip install --user awscli
        aws --version

    - name: gradle jar
      run: |
        ./gradlew jar

    - name: gradle copyRuntimeLib
      run: |
        ./gradlew copyRuntimeLib

    - name: gradle test
      run: |
        ./gradlew test


    #- name: deploy__aws_s3_sync
    # TODO Example: https://github.com/jakejarvis/s3-sync-action
    # # Reference: .travis.yml
    #  run: |
    #    ~/.local/bin/aws s3 sync --region=us-east-1 --cache-control "public, max-age=86400" --content-encoding utf-8 --delete build/docs/javadoc/ s3://website-javadoc.freenetproject.org
    #    #skip_cleanup: true
    #    #on:
    #    #  branch: next
    #    #  jdk: openjdk8

    #- name: deploy__publish
    # # Reference: .travis.yml
    #  run: |
    #    ./gradlew -x test publish
    #    #skip_cleanup: true
    #    #on:
    #    #  tags: true
    #    #  jdk: openjdk8

    #- name: deploy__release
    # # Reference: .travis.yml
    #  provider: releases
    #  skip_cleanup: true
    #  api_key:
    #    - secure: CDYRFrmkAOdn4QJVww6/pziDVdZ67fvRsLOKbilao/oRdP0uvsYS+OfX+Spu/Y0qCY0xSehvqgUoD8KoFqWuhos3iF4N515S5WNuiqOao7Ac2vBCt0ZMJy7MktyE5mYOD1Paf891n6Z+eILWGI54GGEau3JPes0G9jdMphW4ma8=
    #  prerelease: true
    #  file: build/output/*jar
    #  file_glob: true
    #  on:
    #    tags: true
    #    jdk: openjdk8

